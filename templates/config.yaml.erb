# path to a directory with all packages
storage: ./storage

# a list of users
<%- if @htpasswd_auth -%>
auth:
  htpasswd:
    file: ./htpasswd
<% elsif @ldap_auth -%>
auth:
  ldap:
    type: 'ldap'
<%- if @ldap_group_name_attribute -%>
    groupNameAttribute: '<%= @ldap_group_name_attribute %>'
<% end -%>
    cache:
      size: 100
      expire: 300
    client_options:
<%- if @ldap_url -%>
      url: '<%= @ldap_url %>'
<% end -%>
<%- if @ldap_bind_dn -%>
      bindDn: '<%= @ldap_bind_dn %>'
<% end -%>
<%- if @ldap_bind_credentials -%>
      bindCredentials: '<%= @ldap_bind_credentials %>'
<% end -%>
<%- if @ldap_search_base -%>
      searchBase: '<%= @ldap_search_base %>'
<% end -%>
<%- if @ldap_search_filter -%>
      searchFilter: '<%= @ldap_search_filter %>'
<% end -%>
<%- if @ldap_group_dn_property -%>
      groupDnProperty: '<%= @ldap_group_dn_property %>'
<% end -%>
<%- if @ldap_group_search_base -%>
      groupSearchBase: '<%= @ldap_group_search_base %>'
<% end -%>
<%- if @ldap_group_search_filter -%>
      groupSearchFilter: '<%= @ldap_group_search_filter %>'
<% end -%>
<%- if @ldap_search_attributes -%>
      searchAttributes:
<%- @ldap_search_attributes.each do |attr| -%>
      - '<%= attr %>'
<% end -%>
<% end -%>
<%- if @ldap_tls_options -%>
      tlsOptions:
<%- @ldap_tls_options.each do |key, val| -%>
        <%= key %>: <%= val %>
<% end -%>
<% end -%>
      reconnect: true
<% else -%>
users:
  admin:
    # crypto.createHash('sha1').update(pass).digest('hex')
    password: <%=@conf_admin_pw_hash %>
<%- if @conf_user_pw_combinations != nil -%>
<%- @conf_user_pw_combinations.each do |combi|
         -%>  <%= combi[0] %>:
    password: <%= combi[1] %>
<% end -%>
<% end -%>
<% end -%>

#####################################################################
# Advanced settings
#####################################################################

# if you use nginx with custom path, use this to override links
<% if @url_prefix != nil -%>
url_prefix: <%= @url_prefix %>
<% end -%>

# you can specify listen address (or simply a port)
# listen: localhost:4873
listen: <%=@conf_listen_to_address %>:<%=@conf_port %>

# type: file | stdout | stderr
# level: trace | debug | info | http (default) | warn | error | fatal
#
# parameters for file: name is filename
#  {type: 'file', path: 'sinopia.log', level: 'debug'},
#
# parameters for stdout and stderr: format: json | pretty
#  {type: 'stdout', format: 'pretty', level: 'debug'},
logs:
  - {type: stdout, format: pretty, level: http}
  #- {type: file, path: sinopia.log, level: info}

# you can specify proxy used with all requests in wget-like manner here
# (or set up ENV variables with the same name)
<% if @http_proxy %>
http_proxy: <%= @http_proxy %>
<% end %>
<% if @https_proxy %>
https_proxy: <%= @https_proxy %>
<% end %>
#http_proxy: http://something.local/
#https_proxy: https://something.local/
#no_proxy: localhost,127.0.0.1

# maximum size of uploaded json document
# increase it if you have "request entity too large" errors
#max_body_size: 1mb
max_body_size: <%=@conf_max_body_size %>

# a list of other known repositories we can talk to
uplinks:
  npmjs:
    url: https://registry.npmjs.org/

# amount of time (in milliseconds) to wait for repository to respond
# before giving up and use the local cached copy
#timeout: 30000
timeout: <%=@time_out %>

# maximum time (in seconds) in which data is considered up to date
#
# default is 2 minutes, so server won't request the same data from
# uplink if a similar request was made less than 2 minutes ago
#maxage: 120
maxage: <%=@conf_max_age_in_sec %>

packages:
